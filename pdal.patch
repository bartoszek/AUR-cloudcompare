From f3038dcdeb0491c4a653c2ee6fb017326eb676a3 Mon Sep 17 00:00:00 2001
From: Howard Butler <howard@hobu.co>
Date: Thu, 24 Jun 2021 14:54:15 -0500
Subject: [PATCH] fix for PDAL 2.3.0 (#1478)

---
 plugins/core/IO/qPDALIO/src/LASFilter.cpp | 16 ++++++----------
 1 file changed, 6 insertions(+), 10 deletions(-)

diff --git a/plugins/core/IO/qPDALIO/src/LASFilter.cpp b/plugins/core/IO/qPDALIO/src/LASFilter.cpp
index 3fdb6a9e9..b078a60b2 100644
--- a/plugins/core/IO/qPDALIO/src/LASFilter.cpp
+++ b/plugins/core/IO/qPDALIO/src/LASFilter.cpp
@@ -276,7 +276,7 @@ CC_FILE_ERROR LASFilter::saveToFile(ccHObject* entity, const QString& filename,
 		case LAS_CLASSIF_VALUE:
 			hasClassification = true;
 			break;
-		
+
 		case LAS_CLASSIF_SYNTHETIC:
 		case LAS_CLASSIF_KEYPOINT:
 		case LAS_CLASSIF_WITHHELD:
@@ -285,7 +285,7 @@ CC_FILE_ERROR LASFilter::saveToFile(ccHObject* entity, const QString& filename,
 			else
 				hasClassification = true;
 			break;
-		
+
 		case LAS_CLASSIF_OVERLAP:
 			if (minPointFormat >= 6)
 				hasClassifFlags = true;
@@ -398,7 +398,7 @@ CC_FILE_ERROR LASFilter::saveToFile(ccHObject* entity, const QString& filename,
 	{
 		if (!s_saveDlg)
 			s_saveDlg = QSharedPointer<LASSaveDlg>(new LASSaveDlg(nullptr));
-		
+
 		s_saveDlg->bestAccuracyLabel->setText(QString("(%1, %2, %3)").arg(optimalScale.x).arg(optimalScale.y).arg(optimalScale.z));
 
 		if (hasScaleMetaData)
@@ -652,7 +652,7 @@ CC_FILE_ERROR LASFilter::saveToFile(ccHObject* entity, const QString& filename,
 		writer.setInput(f);
 		writer.setOptions(writerOptions);
 
-		//field count 
+		//field count
 		point_count_t tableSize = 3; //XYZ
 		if (hasColors)
 			tableSize += 3; //RGB
@@ -1052,7 +1052,7 @@ static bool ReadExtraBytesVlr(LasHeader &header, std::vector<ExtraDim>& extraDim
 	{
 		return false;
 	}
-	
+
 	size_t size = vlr->dataLen();
 	if (size % sizeof(ExtraBytesSpec) != 0)
 	{
@@ -1107,7 +1107,7 @@ CC_FILE_ERROR LASFilter::loadFile(const QString& filename, ccHObject& container,
 		{
 			ccPointCloud* emptyCloud = new ccPointCloud("empty");
 			container.addChild(emptyCloud);
-			//strange file ;) 
+			//strange file ;)
 			return CC_FERR_NO_ERROR; //Its still strange
 		}
 
@@ -1366,10 +1366,6 @@ CC_FILE_ERROR LASFilter::loadFile(const QString& filename, ccHObject& container,
 					ccLog::Print("[LAS] Spatial reference: " + wkt);
 					pointChunk.loadedCloud->setMetaData(s_LAS_SRS_Key, wkt);
 				}
-				else if (lasHeader.incompatibleSrs())
-				{
-					ccLog::Warning("[LAS] Incompatible spatial reference");
-				}
 				else
 				{
 					ccLog::Print("[LAS] Spatial reference: None");
